@model E_Commerce_Web.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Sections/Menu/_VerticalMenu.cshtml";
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</head>

<div class="container my-5">
    <h2 class="mb-4">Create Product</h2>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="card border-primary mb-4">
            <div class="card-header bg-primary text-white fw-bold">
                Product Details
            </div>
            <div class="card-body">
                <h4>Product</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group row">
                    @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!--
    <div class="form-group row">
        @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-sm-3" })
        <div class="col-sm-9">
            @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
        </div>
    </div>-->

                <div class="form-group row">
                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3 row">
                    @Html.Label("Upload Image", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        <input type="file" name="ImageFile" class="form-control" id="ImageFileInput" onchange="previewProduct(event)" />
                    </div>
                </div>
                <div class="mb-3 row">
                    <div class="col-sm-3">
                        <label>Current Image</label>
                    </div>
                    <div class="col-sm-9">
                        <img src="@Url.Content("~/Content/img/avt/default_avt.jpg")" alt="Product Image" class="img-thumbnail" style="max-width: 200px;" id="productPreview" />
                    </div>
                </div>
            </div>
        </div>

        <div class="d-flex justify-content-between">
            <input type="submit" value="Create Product" class="btn btn-primary" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    }
</div>

<script>
    function previewProduct(event) {
        const reader = new FileReader();
        reader.onload = function () {
            document.getElementById("productPreview").src = reader.result;
        }
        reader.readAsDataURL(event.target.files[0]);
    }
</script>


